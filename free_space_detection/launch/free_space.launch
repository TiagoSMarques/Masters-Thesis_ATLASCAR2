<?xml version="1.0"?>
<!-- -->
<launch>
  <!-- Usar isto quando se usam bags ou usar "rosparam set use_sim_time true"-->
  <!-- <param name="use_sim_time" value="true"/> -->
  <!-- Resto das defenições -->
  <arg name = "record" default = "false"/>
  <param name = "includeUnav" value="true" type="bool"/>
  <param name = "IncludeScans" value="111111" type="string"/>
  <param name = "ref_sensor" value="lms151_E" type="string"/>
  <!--Launch the visualization-->
  <node pkg="rviz" type="rviz" name="rviz" args="--display-config $(find free_space_detection)/config/rviz.rviz" required="true"/>
  <!-- Launch the node   -->
  <node pkg="free_space_detection" type="device_frame_publisher_node" name="device_frame_publisher" required="true" output="screen"/>
  <!-- Launch the node   -->
  <node pkg="orientation_module" type="frame_tf_broadcaster" name="frame_tf_broadcaster" required="true" output="screen"/>
  <!-- Launch the node   -->
  <node pkg="orientation_module" type="orientation_module_node" name="comunic" required="true" output="screen"/>
  <!-- Point cloud assembler -->
  <node type="laser_scan_assembler" pkg="laser_assembler" name="my_assembler">
    <remap from="scan" to="/ld_rms/scan3"/>
    <remap from="assemble_scans2" to="assemble_scans3"/>
    <param name="max_scans" type="int" value="200" />
    <param name="fixed_frame" type="string" value="map" />
  </node>
  <node type="laser_scan_assembler" pkg="laser_assembler" name="my_assembler2">
    <remap from="scan" to="/ld_rms/scan0"/>
    <remap from="assemble_scans2" to="assemble_scans0"/>
    <param name="max_scans" type="int" value="200" />
    <param name="fixed_frame" type="string" value="map" />
  </node>
  <!-- Launch the node   -->
  <node pkg="road_reconstruction" type="road_reconstruction" name="road_reconstruction" required="true" output="screen"/>
  <!-- Launch the node   -->
  <!-- <node pkg="road_reconstruction" type="assem" name="assem" required="true" output="screen"/> -->
  <!-- Conversão em dados de gps -->
  <node name="gps_conv" pkg="gps_common" type="utm_odometry_node">
    <remap from="odom" to="vo"/>
    <!-- <remap from="fix" to="/fix" /> -->
    <param name="rot_covariance" value="99999" />
    <param name="frame_id" value="world" />
  </node>
  <!-- Odometria   -->
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="map"/>
    <param name="freq" value="30.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="false"/>
    <param name="imu_used" value="false"/>
    <param name="vo_used" value="true"/>
    <param name="gps_used" value="false"/>
    <param name="debug" value="false"/>
    <param name="self_diagnose" value="false"/>
    <remap from="robot_pose_ekf/odom_combined" to="odom"/>
    <param name="base_footprint_frame" value="base_footprint_frame"/>
  </node>
  <!-- Launch the node   -->
  <!-- <node pkg="free_space_detection" type="free_space_detection_node" name="free_space_detection" required="true" output="screen"/> -->
  <!-- Launch the tf publisher
  <node pkg="tf" type="static_transform_publisher" name="root_broadcaster" args="0 0 0 0 0 0 1 map root 100" /><node pkg="tf" type="static_transform_publisher" name="lms151_D_broadcaster" args="0 -0.8 0 0 0 -0.43 1 root lms151_D 100" /><node pkg="tf" type="static_transform_publisher" name="lms151_E_broadcaster" args="0 0.8 0 0 0 0.43 1 root lms151_E 100" /><node pkg="tf" type="static_transform_publisher" name="ldmrs0_broadcaster" args="0 0 0 0 0 0 1 root ldmrs0 100" /><node pkg="tf" type="static_transform_publisher" name="ldmrs1_broadcaster" args="0 0 0 0 0 0 1 root ldmrs1 100" /><node pkg="tf" type="static_transform_publisher" name="ldmrs2_broadcaster" args="0 0 0 0 0 0 1 root ldmrs2 100" /><node pkg="tf" type="static_transform_publisher" name="ldmrs3_broadcaster" args="0 0 0 0 0 0 1 root ldmrs3 100" /> -->
  <!--Launch the recorder-->
  <node name="rosbag_record" pkg="rosbag" type="record" output="screen" if="$(arg record)" args=" /ld_rms/scan0 /ld_rms/scan1  /ld_rms/scan2 /ld_rms/scan3 /lms151_D_scan /lms151_E_scan /camera/image_color -o $(find free_space_detection)/laserData/"/>
  <!--Launch the robot model-->
  <include file="$(find free_space_detection)/launch/robotmodel.launch" output="log"/>
</launch>
